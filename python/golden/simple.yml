in_source: |-
  mov r1,15
  mov r2,6
  add rs,r1,r2
  sub rc,r1,r2
  mul r3,r1,r2
  mod r1,r1,r2
  halt

in_stdin: |
out_log: |
  DEBUG   machine:simulation    TICK:   0 PC:   0 ADDR:   0 MEM_OUT: 0 rs: 0 rc: 0 r1: 0 r2: 0 r3: 0 	mov ['r1', '15']  ('mov r1,15'@1:0)
  DEBUG   machine:simulation    TICK:   1 PC:   1 ADDR:   0 MEM_OUT: 0 rs: 0 rc: 0 r1: 15 r2: 0 r3: 0 	mov ['r2', '6']  ('mov r2,6'@2:0)
  DEBUG   machine:simulation    TICK:   2 PC:   2 ADDR:   0 MEM_OUT: 0 rs: 0 rc: 0 r1: 15 r2: 6 r3: 0 	add ['rs', 'r1', 'r2']  ('add rs,r1,r2'@3:0)
  DEBUG   machine:simulation    TICK:   3 PC:   3 ADDR:   0 MEM_OUT: 0 rs: 21 rc: 0 r1: 15 r2: 6 r3: 0 	sub ['rc', 'r1', 'r2']  ('sub rc,r1,r2'@4:0)
  DEBUG   machine:simulation    TICK:   4 PC:   4 ADDR:   0 MEM_OUT: 0 rs: 21 rc: 9 r1: 15 r2: 6 r3: 0 	mul ['r3', 'r1', 'r2']  ('mul r3,r1,r2'@5:0)
  DEBUG   machine:simulation    TICK:   5 PC:   5 ADDR:   0 MEM_OUT: 0 rs: 21 rc: 9 r1: 15 r2: 6 r3: 90 	mod ['r1', 'r1', 'r2']  ('mod r1,r1,r2'@6:0)
  DEBUG   machine:simulation    TICK:   6 PC:   6 ADDR:   0 MEM_OUT: 0 rs: 21 rc: 9 r1: 3 r2: 6 r3: 90 	halt  ('halt'@7:0)
  INFO    machine:simulation    output_buffer: ''

out_stdout: |
  source LoC: 7 code instr: 7
  ============================================================

  instr_counter:  6 ticks: 6
out_code: |-
  [{"index": 0, "opcode": "mov", "arg": ["r1", "15"], "term": [1, 0, "mov r1,15"]},
   {"index": 1, "opcode": "mov", "arg": ["r2", "6"], "term": [2, 0, "mov r2,6"]},
   {"index": 2, "opcode": "add", "arg": ["rs", "r1", "r2"], "term": [3, 0, "add rs,r1,r2"]},
   {"index": 3, "opcode": "sub", "arg": ["rc", "r1", "r2"], "term": [4, 0, "sub rc,r1,r2"]},
   {"index": 4, "opcode": "mul", "arg": ["r3", "r1", "r2"], "term": [5, 0, "mul r3,r1,r2"]},
   {"index": 5, "opcode": "mod", "arg": ["r1", "r1", "r2"], "term": [6, 0, "mod r1,r1,r2"]},
   {"index": 6, "opcode": "halt", "term": [7, 0, "halt"]}]