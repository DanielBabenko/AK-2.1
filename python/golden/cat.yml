in_source: |-
  input
  loop:
      jz break,ir
      print
      input
      jmp loop
  break:
      halt
in_stdin: |-
  Fifty two!
out_code: |-
    [{"index": 0, "opcode": "input", "term": [1, 0, "input"]},
     {"index": 1, "opcode": "jz", "arg": [5, "ir"], "term": [3, 0, "jz break,ir"]},
     {"index": 2, "opcode": "print", "term": [4, 0, "print"]},
     {"index": 3, "opcode": "input", "term": [5, 0, "input"]},
     {"index": 4, "opcode": "jmp", "arg": 1, "term": [6, 0, "jmp loop"]},
     {"index": 5, "opcode": "halt", "term": [8, 0, "halt"]}]
out_stdout: |
  source LoC: 8 code instr: 6
  ============================================================
  Fifty two!
  instr_counter:  39 ticks: 49
out_log: |
  DEBUG   machine:simulation    TICK:   0 PC:   0 ADDR:   0 MEM_OUT: 0 ACC: 0 	input  ('input'@6:0)
  DEBUG   machine:signal_wr     input: 'F'
  DEBUG   machine:simulation    TICK:   2 PC:   1 ADDR:   0 MEM_OUT: 70 ACC: 0 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:   4 PC:   2 ADDR:   0 MEM_OUT: 70 ACC: 70 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: '' << 'F'
  DEBUG   machine:simulation    TICK:   6 PC:   3 ADDR:   0 MEM_OUT: 70 ACC: 70 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: 'i'
  DEBUG   machine:simulation    TICK:   8 PC:   4 ADDR:   0 MEM_OUT: 105 ACC: 70 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:   9 PC:   1 ADDR:   0 MEM_OUT: 105 ACC: 70 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  11 PC:   2 ADDR:   0 MEM_OUT: 105 ACC: 105 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'F' << 'i'
  DEBUG   machine:simulation    TICK:  13 PC:   3 ADDR:   0 MEM_OUT: 105 ACC: 105 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: 'f'
  DEBUG   machine:simulation    TICK:  15 PC:   4 ADDR:   0 MEM_OUT: 102 ACC: 105 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  16 PC:   1 ADDR:   0 MEM_OUT: 102 ACC: 105 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  18 PC:   2 ADDR:   0 MEM_OUT: 102 ACC: 102 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fi' << 'f'
  DEBUG   machine:simulation    TICK:  20 PC:   3 ADDR:   0 MEM_OUT: 102 ACC: 102 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: 't'
  DEBUG   machine:simulation    TICK:  22 PC:   4 ADDR:   0 MEM_OUT: 116 ACC: 102 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  23 PC:   1 ADDR:   0 MEM_OUT: 116 ACC: 102 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  25 PC:   2 ADDR:   0 MEM_OUT: 116 ACC: 116 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fif' << 't'
  DEBUG   machine:simulation    TICK:  27 PC:   3 ADDR:   0 MEM_OUT: 116 ACC: 116 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: 'y'
  DEBUG   machine:simulation    TICK:  29 PC:   4 ADDR:   0 MEM_OUT: 121 ACC: 116 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  30 PC:   1 ADDR:   0 MEM_OUT: 121 ACC: 116 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  32 PC:   2 ADDR:   0 MEM_OUT: 121 ACC: 121 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fift' << 'y'
  DEBUG   machine:simulation    TICK:  34 PC:   3 ADDR:   0 MEM_OUT: 121 ACC: 121 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: ' '
  DEBUG   machine:simulation    TICK:  36 PC:   4 ADDR:   0 MEM_OUT: 32 ACC: 121 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  37 PC:   1 ADDR:   0 MEM_OUT: 32 ACC: 121 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  39 PC:   2 ADDR:   0 MEM_OUT: 32 ACC: 32 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fifty' << ' '
  DEBUG   machine:simulation    TICK:  41 PC:   3 ADDR:   0 MEM_OUT: 32 ACC: 32 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: 't'
  DEBUG   machine:simulation    TICK:  43 PC:   4 ADDR:   0 MEM_OUT: 116 ACC: 32 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  44 PC:   1 ADDR:   0 MEM_OUT: 116 ACC: 32 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  46 PC:   2 ADDR:   0 MEM_OUT: 116 ACC: 116 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fifty ' << 't'
  DEBUG   machine:simulation    TICK:  48 PC:   3 ADDR:   0 MEM_OUT: 116 ACC: 116 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: 'w'
  DEBUG   machine:simulation    TICK:  50 PC:   4 ADDR:   0 MEM_OUT: 119 ACC: 116 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  51 PC:   1 ADDR:   0 MEM_OUT: 119 ACC: 116 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  53 PC:   2 ADDR:   0 MEM_OUT: 119 ACC: 119 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fifty t' << 'w'
  DEBUG   machine:simulation    TICK:  55 PC:   3 ADDR:   0 MEM_OUT: 119 ACC: 119 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: 'o'
  DEBUG   machine:simulation    TICK:  57 PC:   4 ADDR:   0 MEM_OUT: 111 ACC: 119 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  58 PC:   1 ADDR:   0 MEM_OUT: 111 ACC: 119 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  60 PC:   2 ADDR:   0 MEM_OUT: 111 ACC: 111 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fifty tw' << 'o'
  DEBUG   machine:simulation    TICK:  62 PC:   3 ADDR:   0 MEM_OUT: 111 ACC: 111 	input  ('input'@10:0)
  DEBUG   machine:signal_wr     input: '!'
  DEBUG   machine:simulation    TICK:  64 PC:   4 ADDR:   0 MEM_OUT: 33 ACC: 111 	jmp 1  ('jmp loop'@11:0)
  DEBUG   machine:simulation    TICK:  65 PC:   1 ADDR:   0 MEM_OUT: 33 ACC: 111 	jz 5  ('jz break'@8:0)
  DEBUG   machine:simulation    TICK:  67 PC:   2 ADDR:   0 MEM_OUT: 33 ACC: 33 	print  ('print'@9:0)
  DEBUG   machine:signal_output output: 'Fifty two' << '!'
  DEBUG   machine:simulation    TICK:  69 PC:   3 ADDR:   0 MEM_OUT: 33 ACC: 33 	input  ('input'@10:0)
  WARNING machine:simulation    Input buffer is empty!
  INFO    machine:simulation    output_buffer: 'Fifty two!'
